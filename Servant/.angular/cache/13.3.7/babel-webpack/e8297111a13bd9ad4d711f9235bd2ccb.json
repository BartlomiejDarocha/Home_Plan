{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ConfirmAlertComponent } from 'src/app/components/global/utils/confirm-alert/confirm-alert.component';\nimport { StandardAlertComponent } from 'src/app/components/global/utils/standard-alert/standard-alert.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport let UtilsService = /*#__PURE__*/(() => {\n  class UtilsService {\n    constructor(dialog) {\n      this.dialog = dialog;\n    }\n\n    openStandardAlert(header, content) {\n      const message = {\n        header,\n        content\n      };\n      const dialog = this.dialog.open(StandardAlertComponent, {\n        data: message\n      });\n    }\n\n    openConfirmAlert(header, content, confirmButton, cancelButton) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let confirmData = {\n          header: '',\n          content: '',\n          confirmButton: 'Ok',\n          cancelButton: 'Anuluj'\n        };\n        confirmData.header = header;\n        confirmData.content = content;\n\n        if (confirmButton) {\n          confirmData.confirmButton = confirmButton;\n        }\n\n        if (cancelButton) {\n          confirmData.cancelButton = cancelButton;\n        }\n\n        const dialog = this.dialog.open(ConfirmAlertComponent, {\n          data: confirmData\n        });\n        return yield dialog.afterClosed().toPromise();\n      });\n    }\n\n  }\n\n  UtilsService.ɵfac = function UtilsService_Factory(t) {\n    return new (t || UtilsService)(i0.ɵɵinject(i1.MatDialog));\n  };\n\n  UtilsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtilsService,\n    factory: UtilsService.ɵfac,\n    providedIn: 'root'\n  });\n  return UtilsService;\n})();","map":null,"metadata":{},"sourceType":"module"}