{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../loader-service/loader.service\";\nexport let InterceptorService = /*#__PURE__*/(() => {\n  class InterceptorService {\n    constructor(loaderService) {\n      this.loaderService = loaderService;\n      this.headers = new HttpHeaders({\n        'Content-type': 'application/json'\n      });\n    }\n\n    intercept(request, next) {\n      console.log(request, 'request');\n\n      if (!request.params['noNoader']) {\n        this.loaderService.showLoader();\n      }\n\n      const token = localStorage.getItem('token'); // dodać token gdy już zrobię logowanie oraz Serwice do localStore\n\n      request = request.clone({\n        headers: this.headers\n      }); // if (token) {\n\n      if (false) {\n        // request = request.clone({headers: request.headers.set('Authorization', 'test' + token )});\n        request = request.clone({\n          headers: request.headers.set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5pbHNvbkBlbWFpbC5jb20iLCJwYXNzd29yZCI6Im5pbHNvbiIsImlhdCI6MTYyMjc1MDA2NiwiZXhwIjoxNjIyNzUzNjY2fQ.nEni9LFiksZ68M39sVNrz8TQ_gAu3qjj5mgXGl81hqo')\n        });\n      }\n\n      return next.handle(request).pipe(catchError(error => {\n        console.log(error, 'złapał Error'); // dorobić obsługe błędów\n        // dodać obłsugę błędów jak już zorbię utilsy, Apiservice i postawie server w Json;\n\n        return throwError(error);\n      }), finalize(() => {\n        this.loaderService.hideLoader();\n      }));\n    }\n\n  }\n\n  InterceptorService.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.LoaderService));\n  };\n\n  InterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return InterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}