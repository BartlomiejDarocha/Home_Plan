{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/global-services/loader-service/loader.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction LoaderGlobalComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"mat-progress-spinner\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.loaderOptions.color)(\"mode\", ctx_r0.loaderOptions.mode)(\"value\", ctx_r0.loaderOptions.value);\n  }\n}\n\nexport let LoaderGlobalComponent = /*#__PURE__*/(() => {\n  class LoaderGlobalComponent {\n    constructor(loaderService) {\n      this.loaderService = loaderService;\n      this.isLoading = this.loaderService.getLoader;\n      this.loaderOptions = {\n        color: 'primary',\n        mode: 'indeterminate',\n        value: 50\n      };\n    }\n\n  }\n\n  LoaderGlobalComponent.ɵfac = function LoaderGlobalComponent_Factory(t) {\n    return new (t || LoaderGlobalComponent)(i0.ɵɵdirectiveInject(i1.LoaderService));\n  };\n\n  LoaderGlobalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoaderGlobalComponent,\n    selectors: [[\"app-loader-global\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"overlay\", 4, \"ngIf\"], [1, \"overlay\"], [3, \"color\", \"mode\", \"value\"]],\n    template: function LoaderGlobalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoaderGlobalComponent_div_0_Template, 2, 3, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.isLoading));\n      }\n    },\n    directives: [i2.NgIf],\n    pipes: [i2.AsyncPipe],\n    styles: [\".overlay[_ngcontent-%COMP%]{position:fixed;display:block;width:100%;height:100%;top:0;left:0;background-color:#4a4a4acc;z-index:99999}.overlay[_ngcontent-%COMP%]   .mat-progress-spinner[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}\"]\n  });\n  return LoaderGlobalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}